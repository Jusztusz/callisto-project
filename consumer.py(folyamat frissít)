import json
import subprocess
from channels.generic.websocket import WebsocketConsumer

class DataConsumer(WebsocketConsumer):
    def connect(self):
        self.accept()  # Elfogadja a WebSocket kapcsolatot

    def receive(self, text_data):
        json_data = json.loads(text_data)  # JSON formátumra konvertáljuk
        if json_data.get('action') == 'get_services':
            print(f"Received data: {json_data}")

            # Szolgáltatások lekérdezése
            try:
                # Szolgáltatások listázása
                result = subprocess.run(
                    ['systemctl', 'list-unit-files', '--type=service', '--no-pager'],
                    stdout=subprocess.PIPE,
                    stderr=subprocess.PIPE,
                    text=True,
                    check=True
                )

                services_output = result.stdout  # A parancs kimenete
                services_list = services_output.splitlines()  # Sorokba bontás

                services = []
                for line in services_list:
                    if not line.strip() or '@' in line:  # Üres sorok és "@"-val ellátott sorok kihagyása
                        continue
                    parts = line.split()
                    service_name = parts[0]
                    service_state = parts[1] if len(parts) > 1 else "N/A"

                    # Állapot lekérdezése
                    status_result = subprocess.run(
                        ['systemctl', 'is-active', service_name],
                        stdout=subprocess.PIPE,
                        stderr=subprocess.PIPE,
                        text=True,
                        check=False  # Hiba esetén ne dobjon kivételt
                    )
                    service_status = status_result.stdout.strip()  # Szolgáltatás állapotának lekérése

                    services.append({'name': service_name, 'state': service_status})

            except subprocess.CalledProcessError as e:
                print(f"Error running command: {e.stderr}")
                services = []  # Hiba esetén üres lista

            # Visszaküldjük az adatokat a kliensnek
            self.send(text_data=json.dumps({
                'message': 'A rendszer szolgáltatásai és állapotuk:',
                'services': services,
                'received_data': json_data
            }))

    def disconnect(self, close_code):
        print("WebSocket disconnected")
